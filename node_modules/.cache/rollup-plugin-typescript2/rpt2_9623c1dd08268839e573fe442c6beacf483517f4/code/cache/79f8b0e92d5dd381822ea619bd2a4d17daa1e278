{"code":"import { Interface } from '@ethersproject/abi';\r\nimport IPeripheryPaymentsWithFee from '@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json';\r\nimport { validateAndParseAddress } from '@uniswap/sdk-core';\r\nimport { toHex } from './utils/calldata';\r\nexport class Payments {\r\n    /**\r\n     * Cannot be constructed.\r\n     */\r\n    constructor() { }\r\n    static encodeFeeBips(fee) {\r\n        return toHex(fee.multiply(10000).quotient);\r\n    }\r\n    static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions) {\r\n        recipient = validateAndParseAddress(recipient);\r\n        if (!!feeOptions) {\r\n            const feeBips = this.encodeFeeBips(feeOptions.fee);\r\n            const feeRecipient = validateAndParseAddress(feeOptions.recipient);\r\n            return Payments.INTERFACE.encodeFunctionData('unwrapWETH9WithFee', [\r\n                toHex(amountMinimum),\r\n                recipient,\r\n                feeBips,\r\n                feeRecipient\r\n            ]);\r\n        }\r\n        else {\r\n            return Payments.INTERFACE.encodeFunctionData('unwrapWETH9', [toHex(amountMinimum), recipient]);\r\n        }\r\n    }\r\n    static encodeSweepToken(token, amountMinimum, recipient, feeOptions) {\r\n        recipient = validateAndParseAddress(recipient);\r\n        if (!!feeOptions) {\r\n            const feeBips = this.encodeFeeBips(feeOptions.fee);\r\n            const feeRecipient = validateAndParseAddress(feeOptions.recipient);\r\n            return Payments.INTERFACE.encodeFunctionData('sweepTokenWithFee', [\r\n                token.address,\r\n                toHex(amountMinimum),\r\n                recipient,\r\n                feeBips,\r\n                feeRecipient\r\n            ]);\r\n        }\r\n        else {\r\n            return Payments.INTERFACE.encodeFunctionData('sweepToken', [token.address, toHex(amountMinimum), recipient]);\r\n        }\r\n    }\r\n    static encodeRefundETH() {\r\n        return Payments.INTERFACE.encodeFunctionData('refundETH');\r\n    }\r\n}\r\nPayments.INTERFACE = new Interface(IPeripheryPaymentsWithFee.abi);\r\n//# sourceMappingURL=payments.js.map","references":["/Users/luozhiwei/project/uniswap/v3-sdk/node_modules/jsbi/jsbi.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk/node_modules/@ethersproject/abi/lib/index.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk/node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/IPeripheryPaymentsWithFee.sol/IPeripheryPaymentsWithFee.json","/Users/luozhiwei/project/uniswap/v3-sdk/node_modules/@uniswap/sdk-core/dist/index.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk/src/utils/calldata.ts"],"map":"{\"version\":3,\"file\":\"payments.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/payments.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAC9C,OAAO,yBAAyB,MAAM,mHAAmH,CAAA;AACzJ,OAAO,EAAkB,uBAAuB,EAAE,MAAM,mBAAmB,CAAA;AAC3E,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAA;AAcxC,MAAM,OAAgB,QAAQ;IAG5B;;OAEG;IACH,gBAAuB,CAAC;IAEhB,MAAM,CAAC,aAAa,CAAC,GAAY;QACvC,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAM,CAAC,CAAC,QAAQ,CAAC,CAAA;IAC7C,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,aAAmB,EAAE,SAAiB,EAAE,UAAuB;QAC7F,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAA;QAE9C,IAAI,CAAC,CAAC,UAAU,EAAE;YAChB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;YAClD,MAAM,YAAY,GAAW,uBAAuB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;YAE1E,OAAO,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,oBAAoB,EAAE;gBACjE,KAAK,CAAC,aAAa,CAAC;gBACpB,SAAS;gBACT,OAAO;gBACP,YAAY;aACb,CAAC,CAAA;SACH;aAAM;YACL,OAAO,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC,CAAA;SAC/F;IACH,CAAC;IAEM,MAAM,CAAC,gBAAgB,CAC5B,KAAY,EACZ,aAAmB,EACnB,SAAiB,EACjB,UAAuB;QAEvB,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAA;QAE9C,IAAI,CAAC,CAAC,UAAU,EAAE;YAChB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;YAClD,MAAM,YAAY,GAAW,uBAAuB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;YAE1E,OAAO,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;gBAChE,KAAK,CAAC,OAAO;gBACb,KAAK,CAAC,aAAa,CAAC;gBACpB,SAAS;gBACT,OAAO;gBACP,YAAY;aACb,CAAC,CAAA;SACH;aAAM;YACL,OAAO,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC,CAAA;SAC7G;IACH,CAAC;IAEM,MAAM,CAAC,eAAe;QAC3B,OAAO,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAA;IAC3D,CAAC;;AAvDa,kBAAS,GAAc,IAAI,SAAS,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAA\"}","dts":{"name":"/Users/luozhiwei/project/uniswap/v3-sdk/payments.d.ts","writeByteOrderMark":false,"text":"import JSBI from 'jsbi';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport { Percent, Token } from '@uniswap/sdk-core';\r\nexport interface FeeOptions {\r\n    /**\r\n     * The percent of the output that will be taken as a fee.\r\n     */\r\n    fee: Percent;\r\n    /**\r\n     * The recipient of the fee.\r\n     */\r\n    recipient: string;\r\n}\r\nexport declare abstract class Payments {\r\n    static INTERFACE: Interface;\r\n    /**\r\n     * Cannot be constructed.\r\n     */\r\n    private constructor();\r\n    private static encodeFeeBips;\r\n    static encodeUnwrapWETH9(amountMinimum: JSBI, recipient: string, feeOptions?: FeeOptions): string;\r\n    static encodeSweepToken(token: Token, amountMinimum: JSBI, recipient: string, feeOptions?: FeeOptions): string;\r\n    static encodeRefundETH(): string;\r\n}\r\n"}}
