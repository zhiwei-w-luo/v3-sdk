{"code":"import JSBI from 'jsbi';\r\nimport { subIn256 } from '.';\r\nconst Q128 = JSBI.exponentiate(JSBI.BigInt(2), JSBI.BigInt(128));\r\nexport class PositionLibrary {\r\n    /**\r\n     * Cannot be constructed.\r\n     */\r\n    constructor() { }\r\n    // replicates the portions of Position#update required to compute unaccounted fees\r\n    static getTokensOwed(feeGrowthInside0LastX128, feeGrowthInside1LastX128, liquidity, feeGrowthInside0X128, feeGrowthInside1X128) {\r\n        const tokensOwed0 = JSBI.divide(JSBI.multiply(subIn256(feeGrowthInside0X128, feeGrowthInside0LastX128), liquidity), Q128);\r\n        const tokensOwed1 = JSBI.divide(JSBI.multiply(subIn256(feeGrowthInside1X128, feeGrowthInside1LastX128), liquidity), Q128);\r\n        return [tokensOwed0, tokensOwed1];\r\n    }\r\n}\r\n//# sourceMappingURL=position.js.map","references":["/Users/luozhiwei/project/uniswap/v3-sdk/node_modules/jsbi/jsbi.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"position.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/position.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,QAAQ,EAAE,MAAM,GAAG,CAAA;AAE5B,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;AAEhE,MAAM,OAAgB,eAAe;IACnC;;OAEG;IACH,gBAAuB,CAAC;IAExB,kFAAkF;IAC3E,MAAM,CAAC,aAAa,CACzB,wBAA8B,EAC9B,wBAA8B,EAC9B,SAAe,EACf,oBAA0B,EAC1B,oBAA0B;QAE1B,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,EAAE,SAAS,CAAC,EAClF,IAAI,CACL,CAAA;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,EAAE,SAAS,CAAC,EAClF,IAAI,CACL,CAAA;QAED,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;IACnC,CAAC;CACF\"}","dts":{"name":"/Users/luozhiwei/project/uniswap/v3-sdk/utils/position.d.ts","writeByteOrderMark":false,"text":"import JSBI from 'jsbi';\r\nexport declare abstract class PositionLibrary {\r\n    /**\r\n     * Cannot be constructed.\r\n     */\r\n    private constructor();\r\n    static getTokensOwed(feeGrowthInside0LastX128: JSBI, feeGrowthInside1LastX128: JSBI, liquidity: JSBI, feeGrowthInside0X128: JSBI, feeGrowthInside1X128: JSBI): JSBI[];\r\n}\r\n"}}
