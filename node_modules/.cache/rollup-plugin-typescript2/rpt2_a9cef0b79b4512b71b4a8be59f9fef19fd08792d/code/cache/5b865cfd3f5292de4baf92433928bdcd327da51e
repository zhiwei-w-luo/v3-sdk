{"code":"import invariant from 'tiny-invariant';\r\nimport { TickMath } from './tickMath';\r\n/**\r\n * Returns the closest tick that is nearest a given tick and usable for the given tick spacing\r\n * @param tick the target tick\r\n * @param tickSpacing the spacing of the pool\r\n */\r\nexport function nearestUsableTick(tick, tickSpacing) {\r\n    invariant(Number.isInteger(tick) && Number.isInteger(tickSpacing), 'INTEGERS');\r\n    invariant(tickSpacing > 0, 'TICK_SPACING');\r\n    invariant(tick >= TickMath.MIN_TICK && tick <= TickMath.MAX_TICK, 'TICK_BOUND');\r\n    const rounded = Math.round(tick / tickSpacing) * tickSpacing;\r\n    if (rounded < TickMath.MIN_TICK)\r\n        return rounded + tickSpacing;\r\n    else if (rounded > TickMath.MAX_TICK)\r\n        return rounded - tickSpacing;\r\n    else\r\n        return rounded;\r\n}\r\n//# sourceMappingURL=nearestUsableTick.js.map","references":["/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/node_modules/tiny-invariant/dist/tiny-invariant.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/src/utils/tickMath.ts"],"map":"{\"version\":3,\"file\":\"nearestUsableTick.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/nearestUsableTick.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,SAAS,MAAM,gBAAgB,CAAA;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AAErC;;;;GAIG;AACH,MAAM,UAAU,iBAAiB,CAAC,IAAY,EAAE,WAAmB;IACjE,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,CAAA;IAC9E,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,cAAc,CAAC,CAAA;IAC1C,SAAS,CAAC,IAAI,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA;IAC/E,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,WAAW,CAAA;IAC5D,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ;QAAE,OAAO,OAAO,GAAG,WAAW,CAAA;SACxD,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ;QAAE,OAAO,OAAO,GAAG,WAAW,CAAA;;QAC7D,OAAO,OAAO,CAAA;AACrB,CAAC\"}","dts":{"name":"/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/utils/nearestUsableTick.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Returns the closest tick that is nearest a given tick and usable for the given tick spacing\r\n * @param tick the target tick\r\n * @param tickSpacing the spacing of the pool\r\n */\r\nexport declare function nearestUsableTick(tick: number, tickSpacing: number): number;\r\n"}}
