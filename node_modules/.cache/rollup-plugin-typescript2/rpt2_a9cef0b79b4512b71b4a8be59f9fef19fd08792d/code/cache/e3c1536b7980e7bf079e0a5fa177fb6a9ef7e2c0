{"code":"import { Interface } from '@ethersproject/abi';\r\nimport { abi } from '@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json';\r\nimport { toHex } from './utils';\r\n// type guard\r\nfunction isAllowedPermit(permitOptions) {\r\n    return 'nonce' in permitOptions;\r\n}\r\nexport class SelfPermit {\r\n    constructor() { }\r\n    static encodePermit(token, options) {\r\n        return isAllowedPermit(options)\r\n            ? SelfPermit.INTERFACE.encodeFunctionData('selfPermitAllowed', [\r\n                token.address,\r\n                toHex(options.nonce),\r\n                toHex(options.expiry),\r\n                options.v,\r\n                options.r,\r\n                options.s\r\n            ])\r\n            : SelfPermit.INTERFACE.encodeFunctionData('selfPermit', [\r\n                token.address,\r\n                toHex(options.amount),\r\n                toHex(options.deadline),\r\n                options.v,\r\n                options.r,\r\n                options.s\r\n            ]);\r\n    }\r\n}\r\nSelfPermit.INTERFACE = new Interface(abi);\r\n//# sourceMappingURL=selfPermit.js.map","references":["/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/node_modules/@uniswap/sdk-core/dist/index.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/node_modules/@ethersproject/abi/lib/index.d.ts","/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/node_modules/@uniswap/v3-periphery/artifacts/contracts/interfaces/ISelfPermit.sol/ISelfPermit.json","/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"selfPermit.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/selfPermit.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AAC9C,OAAO,EAAE,GAAG,EAAE,MAAM,uFAAuF,CAAA;AAC3G,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAoB/B,aAAa;AACb,SAAS,eAAe,CAAC,aAA4B;IACnD,OAAO,OAAO,IAAI,aAAa,CAAA;AACjC,CAAC;AAED,MAAM,OAAgB,UAAU;IAG9B,gBAAyB,CAAC;IAEhB,MAAM,CAAC,YAAY,CAAC,KAAY,EAAE,OAAsB;QAChE,OAAO,eAAe,CAAC,OAAO,CAAC;YAC7B,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;gBAC3D,KAAK,CAAC,OAAO;gBACb,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;gBACpB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;gBACrB,OAAO,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC;aACV,CAAC;YACJ,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,YAAY,EAAE;gBACpD,KAAK,CAAC,OAAO;gBACb,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;gBACrB,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACvB,OAAO,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC;aACV,CAAC,CAAA;IACR,CAAC;;AAtBa,oBAAS,GAAc,IAAI,SAAS,CAAC,GAAG,CAAC,CAAA\"}","dts":{"name":"/Users/luozhiwei/project/uniswap/v3-sdk-3.0.0-alpha.6/selfPermit.d.ts","writeByteOrderMark":false,"text":"import { BigintIsh, Token } from '@uniswap/sdk-core';\r\nimport { Interface } from '@ethersproject/abi';\r\nexport interface StandardPermitArguments {\r\n    v: 0 | 1 | 27 | 28;\r\n    r: string;\r\n    s: string;\r\n    amount: BigintIsh;\r\n    deadline: BigintIsh;\r\n}\r\nexport interface AllowedPermitArguments {\r\n    v: 0 | 1 | 27 | 28;\r\n    r: string;\r\n    s: string;\r\n    nonce: BigintIsh;\r\n    expiry: BigintIsh;\r\n}\r\nexport declare type PermitOptions = StandardPermitArguments | AllowedPermitArguments;\r\nexport declare abstract class SelfPermit {\r\n    static INTERFACE: Interface;\r\n    protected constructor();\r\n    protected static encodePermit(token: Token, options: PermitOptions): string;\r\n}\r\n"}}
